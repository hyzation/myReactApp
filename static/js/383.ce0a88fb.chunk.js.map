{"version":3,"file":"static/js/383.ce0a88fb.chunk.js","mappings":"0KAEA,GADkBA,EAAAA,EAAAA,eAAc,M,SCGnBC,EAAW,WACpB,IAAQC,GAAiBC,EAAAA,EAAAA,YAAWC,GAA5BF,aAIR,OACI,iCACI,qFACA,yBAAMA,KACN,mBAAQG,QAPF,WAEd,EAK+B,kBAGnC,ECXaC,EAAQ,YACQH,EAAAA,EAAAA,YAAWC,GAA5BF,aACR,OACI,+BAGI,SAACD,EAAQ,KAGrB,ECRe,SAASM,IAEpB,OAAwCC,EAAAA,EAAAA,UAAS,GAAE,eAA5CN,EAAY,KAAEO,EAAe,KAKpC,OACI,4BACI,0EACA,UAAC,WAAkB,CAACC,MAAO,CAAER,aAAAA,GAAe,WACxC,mBAAQG,QAPP,WACTI,EAAgBP,EAAe,EACnC,EAKkC,iBACtB,SAACI,EAAK,IACLJ,OAIjB,CCjBe,SAASK,IACpB,OACI,+BACI,SAAC,EAAK,KAGlB,C","sources":["utils/createContext.js","pages/test6/GrandSon.jsx","pages/test6/Child.jsx","pages/test6/test6.jsx","routes/test6.jsx"],"sourcesContent":["import { createContext } from 'react'\r\nconst myContext = createContext(null)\r\nexport default myContext","// 同样需要引入我们定义的第一步的文件\r\nimport myContext from '../../utils/createContext'\r\nimport React, { useContext } from 'react'\r\n// 使用useContext包裹 最终使用解构拿到我们需要的值\r\nexport const GrandSon = () => {\r\n    const { industryList } = useContext(myContext)\r\n    const minus = () => {\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <div>（我是子的子元素）</div>\r\n            <div>{industryList}</div>\r\n            <button onClick={minus}>-1</button>\r\n        </>\r\n    )\r\n}\r\n","// 同样需要引入我们定义的第一步的文件\r\nimport myContext from '../../utils/createContext'\r\nimport { GrandSon } from './GrandSon'\r\nimport React, { useContext } from 'react'\r\n// 使用useContext包裹 最终使用解构拿到我们需要的值\r\nexport const Child = () => {\r\n    const { industryList } = useContext(myContext)\r\n    return (\r\n        <>\r\n            {/* <div>我是子元素（我也可以是子的子元素）</div>\r\n            <div>{industryList.label}</div> */}\r\n            <GrandSon />\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n// 引入我们定义的第一步的文件\r\nimport myContext from '../../utils/createContext'\r\nimport { Child } from './Child.jsx'\r\n// 使用myContext.Provider包裹我们需要传值的组件 value属性是我们要传的值\r\n// industryList为我要传的值 在这里我传递的是一个Object 里面包含一个industryList\r\nexport default function Index() {\r\n    // const industryList = { label: '1', }\r\n    const [industryList, setindustryList] = useState(1)\r\n\r\n    const plus = () => {\r\n        setindustryList(industryList + 1)\r\n    }\r\n    return (\r\n        <div>\r\n            <span>我是顶层父元素</span>\r\n            <myContext.Provider value={{ industryList }}>\r\n                <button onClick={plus}>+1</button>\r\n                <Child />\r\n                {industryList}\r\n            </myContext.Provider>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState, Suspense } from 'react'\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\r\nimport { OrbitControls, Html } from '@react-three/drei'\r\nimport Test6 from \"../pages/test6/test6\";\r\n\r\n\r\nexport default function Index() {\r\n    return (\r\n        <>\r\n            <Test6 />\r\n        </>\r\n    );\r\n}"],"names":["createContext","GrandSon","industryList","useContext","myContext","onClick","Child","Index","useState","setindustryList","value"],"sourceRoot":""}