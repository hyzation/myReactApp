{"version":3,"file":"static/js/699.f0c60156.chunk.js","mappings":"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","sources":["pages/test4/test4.jsx","routes/test4.jsx","../node_modules/@react-three/drei/core/OrbitControls.js","../node_modules/@react-three/drei/web/Html.js"],"sourcesContent":["import React, { useEffect, useRef, useState, Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Canvas, useFrame } from '@react-three/fiber'\r\nimport { OrbitControls, Html } from '@react-three/drei'\r\n\r\nimport './test4.css'\r\n\r\nimport * as THREE from 'three'\r\n\r\n// import './styles.css'\r\n\r\nconst dummy = new THREE.Vector3()\r\nconst lookAtPos = new THREE.Vector3()\r\n\r\nexport default function Index() {\r\n    const [position, setPos] = useState(dummy.set(10, 5, 10))\r\n    const [canControl, setCanControl] = useState(false)\r\n\r\n    const Thing = () => {\r\n        const ref = useRef()\r\n        useFrame(() => (ref.current.rotation.x = ref.current.rotation.y += 0.01))\r\n        const [zoom, setZoom] = useState(false)\r\n\r\n        // useEffect(() => {\r\n        //     setTimeout(() => {\r\n        //         setZoom((zoom) => !zoom)\r\n        //     }, 5000)\r\n        // }, [zoom])\r\n\r\n        useFrame((state, delta) => {\r\n            const step = 0.02\r\n            if (!canControl) {\r\n                console.log(123);\r\n                state.camera.fov = THREE.MathUtils.lerp(state.camera.fov, zoom ? 10 : 42, step)\r\n                // state.camera.position.lerp(dummy.set(zoom ? 25 : 10, zoom ? 1 : 5, zoom ? 0 : 10), step)\r\n                state.camera.position.lerp(position, step)\r\n                // lookAtPos.x = Math.sin(state.clock.getElapsedTime() * 2)\r\n                state.camera.lookAt(lookAtPos)\r\n                state.camera.updateProjectionMatrix()\r\n            }\r\n        })\r\n\r\n        return (\r\n            <mesh\r\n                castShadow\r\n                receiveShadow\r\n                ref={ref}\r\n                onClick={(e) => console.log('click')}\r\n                onPointerOver={(e) => console.log('hover')}\r\n                onPointerOut={(e) => console.log('unhover')}>\r\n                <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\r\n                {/* <meshNormalMaterial attach=\"material\" /> */}\r\n                <meshStandardMaterial color={\"red\"} />\r\n            </mesh>\r\n        )\r\n    }\r\n\r\n    const Sphere = () => {\r\n        const sphereRef = useRef();\r\n\r\n        useFrame(() => {\r\n            // sphereRef.current.rotation.x += 0.1;\r\n            sphereRef.current.rotation.z -= 0.01;\r\n        });\r\n\r\n        return (\r\n            <group ref={sphereRef}>\r\n                <mesh castShadow receiveShadow position={[1, 1, 0]}>\r\n                    <sphereBufferGeometry args={[0.25, 24, 24]} />\r\n                    <meshStandardMaterial color={\"blue\"} />\r\n                </mesh>\r\n            </group>\r\n        );\r\n    };\r\n\r\n    const ChangeCamera = (x, y, z) => {\r\n        setCanControl(false)\r\n        setPos(dummy.set(x, y, z))\r\n    }\r\n\r\n    const changeControl = () => {\r\n        setCanControl(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sidebar\">\r\n                <button onClick={() => { ChangeCamera(0, 0, 10) }}>Pos1</button>\r\n                <button onClick={() => { ChangeCamera(0, 50, 0) }}>Pos2</button>\r\n                <button onClick={() => { ChangeCamera(-10, 5, 10) }}>Pos3</button>\r\n            </div>\r\n            <Canvas\r\n                style={{ width: '100%', height: '100vh', }}\r\n                onMouseDown={changeControl}\r\n                shadows\r\n                // shadowMap={{ type: THREE.VSMShadowMap }}\r\n            >\r\n                <Suspense fallback={<Html style={{\r\n                    color: '#000000',\r\n                    width: '100px',\r\n                }} center>加载中...</Html>}>\r\n\r\n                    <directionalLight\r\n                        position={[0, 5, 0]}\r\n                        castShadow\r\n                        shadow-mapSize-height={1024}\r\n                        shadow-mapSize-width={1024}\r\n                        shadow-radius={10}\r\n                        shadow-bias={-0.0001}\r\n                    />\r\n                    <Thing />\r\n                    <Sphere />\r\n\r\n                    <gridHelper />\r\n\r\n                    <OrbitControls\r\n                        makeDefault\r\n                        minAzimuthAngle={0}\r\n                    // maxAzimuthAngle={Math.PI / 2}\r\n                    // minPolarAngle={Math.PI / 3}\r\n                    // maxPolarAngle={Math.PI / 3}\r\n                    // enableZoom={true}\r\n                    // enablePan={true}\r\n                    // zoomSpeed={0.3}\r\n                    />\r\n                </Suspense>\r\n            </Canvas>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}","import Test4 from \"../pages/test4/test4\";\r\n\r\n\r\nexport default function Index() {\r\n    return (\r\n        <>\r\n            <Test4 />\r\n        </>\r\n    );\r\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null); // Append to the connected element, which makes HTML work with views\n\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      var _root$current;\n\n      (_root$current = root.current) == null ? void 0 : _root$current.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n\n      (_root$current2 = root.current) == null ? void 0 : _root$current2.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n"],"names":["dummy","THREE","lookAtPos","Index","useState","set","position","setPos","canControl","setCanControl","Thing","ref","useRef","useFrame","current","rotation","x","y","zoom","state","delta","console","log","camera","fov","lerp","lookAt","updateProjectionMatrix","castShadow","receiveShadow","onClick","e","onPointerOver","onPointerOut","attach","args","color","Sphere","sphereRef","z","ChangeCamera","className","style","width","height","onMouseDown","shadows","Suspense","fallback","Html","center","OrbitControls","makeDefault","minAzimuthAngle","React","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","invalidate","useThree","defaultCamera","gl","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","enabled","update","connect","dispose","callback","addEventListener","removeEventListener","old","_extends","object","v1","Vector3","v2","v3","defaultCalculatePosition","el","size","objectPos","setFromMatrixPosition","matrixWorld","project","widthHalf","heightHalf","epsilon","value","Math","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","children","eps","fullscreen","portal","distanceFactor","sprite","transform","occlude","onOcclude","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","props","scene","raycaster","document","createElement","root","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","target","parentNode","currentRoot","ReactDOM","updateMatrixWorld","cssText","vec","appendChild","removeChild","unmount","styles","top","left","transformStyle","transformInnerStyles","_root$current","_root$current2","render","visible","updateWorldMatrix","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectBehindCamera","raytraceTarget","Array","isArray","map","item","previouslyVisible","isvisible","elPos","screenPos","clone","setFromCamera","intersects","intersectObjects","length","intersectionDistance","distance","distanceTo","ray","origin","isObjectVisible","display","zIndex","PerspectiveCamera","OrthographicCamera","dist","A","far","near","B","round","objectZIndex","projectionMatrix","isOrthographicCamera","bottom","right","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","scale","perspective","undefined","vFOV","tan","objectScale"],"sourceRoot":""}